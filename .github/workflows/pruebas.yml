name: PWA CI/CD Workflow

# Disparadores para el workflow
on:
  push:
    branches:
      - '*'    # Ejecutar las pruebas en cualquier rama en cada push
  pull_request:
    branches:
      - main   # Ejecutar las pruebas antes de fusionar a main
  workflow_dispatch:

# Permisos para GitHub Actions
permissions:
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Node.js (para Angular y Jest)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Versión de Node.js recomendada
          cache: 'npm'  # Configura el caché para npm automáticamente

      # 3. Instalar dependencias del proyecto
      - name: Install dependencies
        run: npm ci

      # 4. Instalar Ionic CLI globalmente
      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      # 5. Levantar la aplicación de Ionic
      - name: Start Ionic App
        run: ionic serve --host 0.0.0.0 --port 8100 &
        env:
          CI: true

      # 6. Esperar a que el servidor esté disponible antes de continuar
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:8100

      # 7. Ejecutar Linter
      - name: Run lint
        run: npm run lint 
        
      # 8. Ejecutar pruebas unitarias con Jest
      - name: Run Karma tests
        run: npm run test 

      # 9. Ejecutar pruebas e2e con Cypress
      - name: e2e cypress
        run: npx cypress run
